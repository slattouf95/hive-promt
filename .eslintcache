[{"/Users/sufdaddy/Desktop/Hive/dropdown/src/index.js":"1","/Users/sufdaddy/Desktop/Hive/dropdown/src/reportWebVitals.js":"2","/Users/sufdaddy/Desktop/Hive/dropdown/src/components/Container.js":"3","/Users/sufdaddy/Desktop/Hive/dropdown/src/components/Dropdown.js":"4","/Users/sufdaddy/Desktop/Hive/dropdown/src/components/List.js":"5","/Users/sufdaddy/Desktop/Hive/dropdown/src/context.js":"6","/Users/sufdaddy/Desktop/Hive/dropdown/src/reducer.js":"7","/Users/sufdaddy/Desktop/Hive/dropdown/src/components/App.js":"8"},{"size":511,"mtime":1612045475333,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611960107116,"results":"11","hashOfConfig":"10"},{"size":167,"mtime":1611960734484,"results":"12","hashOfConfig":"10"},{"size":2263,"mtime":1612045143367,"results":"13","hashOfConfig":"10"},{"size":1431,"mtime":1612045332980,"results":"14","hashOfConfig":"10"},{"size":175,"mtime":1611989143836,"results":"15","hashOfConfig":"10"},{"size":1526,"mtime":1612044276390,"results":"16","hashOfConfig":"10"},{"size":179,"mtime":1612045528630,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dyat40",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sufdaddy/Desktop/Hive/dropdown/src/index.js",[],"/Users/sufdaddy/Desktop/Hive/dropdown/src/reportWebVitals.js",[],["38","39"],"/Users/sufdaddy/Desktop/Hive/dropdown/src/components/Container.js",[],"/Users/sufdaddy/Desktop/Hive/dropdown/src/components/Dropdown.js",["40"],"import React, {useState, useContext, useReducer, useEffect} from 'react';\nimport DropdownContext from '../context';\nimport DropdownReducer from '../reducer';\nimport List from './List.js';\nimport './styles/Dropdown.css';\n\nconst items = [{id: 1, val: 'Option 1'},{id: 2, val : 'Option 2'},{id: 3 , val: 'Option 3'},{id: 4, val: 'Option 1'},{id: 5, val : 'Option 2'},{id: 6 , val: 'Option 3'},{id: 7, val: 'Option 1'},{id: 8, val : 'Option 2'},{id: 9 , val: 'Option 3'},{id: 10, val: 'Option 1'},{id: 11, val : 'Option 2'},{id: 12 , val: 'Option 3'},{id: 13, val: 'Option 1'},{id: 14, val : 'Option 2'},{id: 15 , val: 'Option 3'}]\n\nconst Dropdown = () => {\n\n  const initialState = useContext(DropdownContext);\n  const [state,dispatch] = useReducer(DropdownReducer, initialState);\n  const [isOpen, setIsOpen] = useState(false);\n\n\n  useEffect(() => {\n    dispatch({\n      type: \"GET_ITEMS\",\n      payload: items\n    })\n  },[]);\n\n  const handleToggle = () => {\n    setIsOpen( prevIsOpen => !prevIsOpen);\n  };\n\n  const getLabel = () => {\n    let label = \"\";\n    let counter = 0;\n    let size = state.selectedItems.size \n    if(size === 0){\n      return \"No Option Chosen\"\n    }else {\n\n      for(let [key,value] of state.selectedItems){\n        if(counter > 3 && size > 3){\n          return label.slice(2).concat(' ...')\n        }\n        label += `, ${value}`;\n        counter += 1;\n      }\n      return label.slice(2);\n    }\n  }\n\n  return (\n    <DropdownContext.Provider value={{state, dispatch}} className={\"dropdown\"} >\n      <div>Dropdown</div>\n      <div onClick={handleToggle} className={\"dropdown-select\"} > \n        {getLabel()}\n        {\n        isOpen ? <img alt=\"chevron up\" src=\"https://img.icons8.com/plumpy/24/000000/chevron-down.png\"/> :  <img alt=\"chevron down\" src=\"https://img.icons8.com/plumpy/24/000000/chevron-up.png\"/>\n        }\n      </div>\n      {\n        isOpen && <List isOpen={isOpen} />\n      }\n      {\n        isOpen && state.isMultiSelect && (\n          <>\n            <button onClick={() => dispatch({type:\"SELECT_ALL\"})}>Select All </button>\n            <button onClick={() => dispatch({type:\"DESELECT_ALL\"})}>Deselect All </button>\n          </>\n        )\n      }\n    </DropdownContext.Provider>\n  );\n};\n\nexport default Dropdown;\n\n\n\n\n\n\n\n","/Users/sufdaddy/Desktop/Hive/dropdown/src/components/List.js",["41","42"],"import React, {useContext, useEffect,useRef, useState} from 'react';\nimport DropdownContext from \"../context\";\nimport './styles/List.css';\n\n\nconst List = ({isOpen}) => {\n  const { state, dispatch } = useContext(DropdownContext);\n  const [isFetching, setIsFetching] = useState(false);\n  const listRef = useRef();\n\n  useEffect(() => {\n    const isScrolling =  () => {\n      if (\n        listRef.current.scrollTop + listRef.current.clientHeight >= listRef.current.scrollHeight ||\n        isFetching\n      ){\n        setIsFetching(true);\n        dispatch({type:\"LOAD_MORE\"});\n        setIsFetching(false);\n      }\n    };\n    if(isOpen){\n      listRef.current.addEventListener(\"scroll\", isScrolling,false);\n    }\n    return () => {\n      if(listRef?.current){\n        listRef.current.removeEventListener(\"scroll\", isScrolling)\n      }\n    };\n  }, [isOpen]);\n  \n  return (\n    <div \n      ref={listRef} \n      className=\"dropdown-list\" \n      style={{height: 100, overflow: \"scroll\"}}\n    >\n      {\n        state.items.map(({id,val}) => (\n          <div className={\"dropdown-item\"} key={id} onClick={() => {dispatch({type: \"TOGGLE_ITEM\",payload: {id, val}})}}>\n            {val}\n            <div>\n            {state.selectedItems.has(id) && <img alt=\"check mark\" src=\"https://img.icons8.com/small/16/000000/filled-checked-checkbox.png\"/>}\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n  \n};\n\nexport default List;","/Users/sufdaddy/Desktop/Hive/dropdown/src/context.js",[],"/Users/sufdaddy/Desktop/Hive/dropdown/src/reducer.js",[],["43","44"],"/Users/sufdaddy/Desktop/Hive/dropdown/src/components/App.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":35,"column":16,"nodeType":"51","messageId":"52","endLine":35,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":27,"column":17,"nodeType":"51","endLine":27,"endColumn":24},{"ruleId":"53","severity":1,"message":"55","line":30,"column":6,"nodeType":"56","endLine":30,"endColumn":14,"suggestions":"57"},{"ruleId":"45","replacedBy":"58"},{"ruleId":"47","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The ref value 'listRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'listRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'dispatch' and 'isFetching'. Either include them or remove the dependency array.","ArrayExpression",["62"],["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [dispatch, isFetching, isOpen]",{"range":"65","text":"66"},[842,850],"[dispatch, isFetching, isOpen]"]